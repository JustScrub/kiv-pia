#
name: Run and test the app

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    branches: ['release']
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Modify compose for test
        run: sed -i "s|#APITESTSQLSCRIPT|- ./SQL_Scripts/api_test_data.sql:/docker-entrypoint-initdb.d/02.sql|" compose.yaml 

      - name: Generate .env file
        run: | 
          cat <<EOF > .env
          DB_NAME = kiv_pia_test
          DB_USER = kiv_pia_root
          DB_PASS = kiv_pia_pass
          WEB_PORT = 8880
          PMA_PORT = 8881
          WSS_HOST = localhost # "publicly" reachable hostname of the websocket server -- accessed outside of container!
          EOF

      - name: Install composer dependencies
        run: cd web/Composer && composer install

      - name: Add permission to the Articles directory
        run: sudo chmod -R 777 ./web/Articles && ls -la ./web/Articles

      - name: Run app
        run: docker compose up -d

      - name: install python dependencies
        run: pip3 install -r ./API_test/requirements.txt

      - name: Wait for the app to init
        uses: jakejarvis/wait-action@master
        with:
          time: '1m'

      - name: Run tests
        run: cd API_test && ./runtests.sh

      - name: write test results
        run: cat API_test/result.txt

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: API_test/result.txt